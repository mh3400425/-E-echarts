.版本 2
.支持库 EDataStructure

.程序集 STJsonValue, , 公开, JSON值对象。用于储存JSON格式的数据，支持所有JSON类型数据。JimStone(谢栋)
.程序集变量 mType, 文本型
.程序集变量 mValue, 文本型
.程序集变量 mArray, 字节集, , "0"
.程序集变量 mObject, 表

.子程序 _初始化, , , 当基于本类的对象被创建后，此方法会被自动调用

Clear ()


.子程序 _销毁, , , 当基于本类的对象被销毁前，此方法会被自动调用



.子程序 Clear, , 公开, 清空

mType ＝ #JTYPE_NULL
mValue ＝ “”
.如果真 (取数组成员数 (mArray) ＞ 0)
    重定义数组 (mArray, 假, 0)
.如果真结束
mObject.删除所有键值对 ()


.子程序 Type, 文本型, 公开, 当前对象类型。参考 JTYPE_ 打头的常量
.参数 value, 文本型, 可空, 对象类型。参考 JTYPE_ 打头的常量

.如果真 (是否为空 (value) ＝ 假)
    mType ＝ value
.如果真结束
返回 (mType)


.子程序 Size, 整数型, 公开, 如果当前对象类型为

.如果真 (文本比较 (mType, #JTYPE_ARRAY, 真) ≠ 0)
    返回 (0)
.如果真结束
返回 (取数组成员数 (mArray))


.子程序 Get, STJsonValue, 公开, 通过名称获取对象
.参数 name, 文本型, 参考
.局部变量 val, STJsonValue
.局部变量 data, 字节集

data ＝ __OUT_DATA_OBJ (name)
.如果真 (取字节集长度 (data) ＝ 0)
    返回 (val)
.如果真结束
返回 (ByteArrayToJson (data))


.子程序 GetAt, STJsonValue, 公开, 通过位置获取对象
.参数 pos, 整数型, 参考, 位置。从1开始
.局部变量 val, STJsonValue

.如果真 (pos ＜ 1 或 pos ＞ Size ())
    返回 (val)
.如果真结束
返回 (ByteArrayToJson (mArray [pos]))


.子程序 Put, 逻辑型, 公开, 加入对象。
.参数 name, 文本型, 参考
.参数 data, STJsonValue, 参考
.局部变量 node, 节点

.如果真 (取文本长度 (name) ＝ 0)
    返回 (假)
.如果真结束
.如果真 (文本比较 (mType, #JTYPE_OBJECT, 假) ≠ 0)
    Clear ()
    mType ＝ #JTYPE_OBJECT
.如果真结束
node.加入属性 (name, JsonToByteArray (data))
返回 (mObject.加入键值对 (到字节集 (name), node))


.子程序 Add, 逻辑型, 公开, 加入对象到数组。
.参数 obj, STJsonValue, 参考, 对象

.如果真 (文本比较 (mType, #JTYPE_ARRAY, 假) ≠ 0)
    Clear ()
    mType ＝ #JTYPE_ARRAY
.如果真结束
加入成员 (mArray, JsonToByteArray (obj))
返回 (真)


.子程序 Remove, 逻辑型, 公开, 删除下级对象。只针对 #JTYPE_OBJECT 类型的对象
.参数 name, 文本型

.如果真 (ContainsObject (name) ＝ 假)
    返回 (假)
.如果真结束
返回 (mObject.删除键值对 (到字节集 (name)))


.子程序 RemoveAt, 逻辑型, 公开, 删除指定位置的对象。只针对 #JTYPE_ARRAY 类型的对象
.参数 pos, 整数型, , 位置索引。通过 Size() 方法可以获取总数量，从1开始

.如果真 (文本比较 (mType, #JTYPE_ARRAY, 假) ≠ 0)
    返回 (假)
.如果真结束
.如果真 (pos ＜ 1 或 pos ＞ Size ())
    返回 (假)
.如果真结束
删除成员 (mArray, pos, 1)
返回 (真)


.子程序 ContainsObject, 逻辑型, 公开, 是否包含对象。只针对 #JTYPE_OBJECT 类型的对象
.参数 name, 文本型, 参考, 对象名
.局部变量 node, 节点

.如果真 (取文本长度 (name) ＝ 0)
    返回 (假)
.如果真结束
.如果真 (文本比较 (mType, #JTYPE_OBJECT, 假) ≠ 0)
    返回 (假)
.如果真结束
返回 (mObject.取键值 (到字节集 (name), node))


.子程序 Keys, 整数型, 公开, 获取对象的所有键(返回键数量)
.参数 keySet, 文本型, 参考 数组, 存储所有键的数组
.局部变量 arr, 字节集, , "0"
.局部变量 len, 整数型
.局部变量 i, 整数型

.如果真 (文本比较 (mType, #JTYPE_OBJECT, 假) ≠ 0)
    返回 (0)
.如果真结束
arr ＝ mObject.取所有键 ()
len ＝ 取数组成员数 (arr)
重定义数组 (keySet, 假, len)
.计次循环首 (len, i)
    keySet [i] ＝ 到文本 (arr [i])
.计次循环尾 ()
返回 (len)


.子程序 IsNull, 逻辑型, 公开, 是否为空

返回 (文本比较 (#JTYPE_NULL, mType, 假) ＝ 0)


.子程序 AsLong, 长整数型, 公开, 转为长整数型

返回 (到数值 (mValue))


.子程序 AsString, 文本型, 公开, 转为文本型

返回 (mValue)


.子程序 AsDouble, 双精度小数型, 公开, 转为双精度浮点型

返回 (到数值 (mValue))


.子程序 AsBool, 逻辑型, 公开, 转为逻辑型

返回 (文本比较 (“true”, mValue, 真) ＝ 0)


.子程序 SetLong, , 公开, 设置长整数值。如果本身数据类型不是 #JTYPE_LONG 则将清空现有数据并转换为 #JTYPE_LONG 型
.参数 value, 长整数型, 参考

.如果真 (文本比较 (mType, #JTYPE_LONG, 真) ≠ 0)
    Clear ()
    mType ＝ #JTYPE_LONG
.如果真结束
mValue ＝ 到文本 (value)


.子程序 SetDouble, , 公开, 设置小数型。如果本身数据类型不是 #JTYPE_DOUBLE 则将清空现有数据并转换为 #JTYPE_DOUBLE 型
.参数 value, 双精度小数型, 参考

.如果真 (文本比较 (mType, #JTYPE_DOUBLE, 真) ≠ 0)
    Clear ()
    mType ＝ #JTYPE_DOUBLE
.如果真结束
mValue ＝ 到文本 (value)


.子程序 SetString, , 公开, 设置文本型。如果本身数据类型不是 #JTYPE_STRING 则将清空现有数据并转换为 #JTYPE_STRING 型
.参数 value, 文本型, 参考

.如果真 (文本比较 (mType, #JTYPE_STRING, 真) ≠ 0)
    Clear ()
    mType ＝ #JTYPE_STRING
.如果真结束
mValue ＝ value


.子程序 SetBool, , 公开, 设置为逻辑型
.参数 value, 逻辑型

.如果真 (文本比较 (mType, #JTYPE_BOOL, 假) ≠ 0)
    Clear ()
    mType ＝ #JTYPE_BOOL
.如果真结束
mValue ＝ 选择 (value, “true”, “false”)


.子程序 SetNull, , 公开, 设置为空

Clear ()


.子程序 ToJsonString, 文本型, 公开, 转换为JSON文本

返回 (“”)


.子程序 __OUT_DATA_ARRAY, 整数型, 公开, 保留方法
.参数 array, 字节集, 参考 数组
.局部变量 len, 整数型

len ＝ Size ()
复制数组 (array, mArray)
返回 (len)


.子程序 __OUT_DATA_OBJ, 字节集, 公开, 保留方法
.参数 name, 文本型, 参考
.局部变量 key, 字节集
.局部变量 node, 节点
.局部变量 data, 字节集

key ＝ 到字节集 (name)
data ＝ {  }

.如果真 (文本比较 (mType, #JTYPE_OBJECT, 假) ≠ 0)
    返回 (data)
.如果真结束
.如果真 (mObject.取键值 (key, node) ＝ 假)
    返回 (data)
.如果真结束
.如果真 (node.取字节集值 (name, data) ＝ 假)
    返回 (data)
.如果真结束
返回 (data)


.子程序 __IN_DATA_ARRAY, , 公开, 保留方法
.参数 data, 字节集

.如果真 (文本比较 (mType, #JTYPE_ARRAY, 假) ≠ 0)
    mType ＝ #JTYPE_ARRAY
.如果真结束
加入成员 (mArray, data)


.子程序 __IN_DATA_OBJ, , 公开, 保留方法
.参数 name, 文本型, 参考
.参数 data, 字节集
.局部变量 node, 节点

.如果真 (文本比较 (mType, #JTYPE_OBJECT, 假) ≠ 0)
    mType ＝ #JTYPE_OBJECT
.如果真结束
node.加入属性 (name, data)
mObject.加入键值对 (到字节集 (name), node)

